diff --git a/src/Message/Handler/GenerateBatchHandler.php b/src/Message/Handler/GenerateBatchHandler.php
index de3aa51..c0d034b 100644
--- a/src/Message/Handler/GenerateBatchHandler.php
+++ b/src/Message/Handler/GenerateBatchHandler.php
@@ -78,6 +78,10 @@ final class GenerateBatchHandler implements MessageHandlerInterface
 
     private LoggerInterface $logger;
 
+    private array $brandsByFeedCode;
+
+    private array $taxonsByFeedCode;
+
     public function __construct(
         FeedRepositoryInterface $feedRepository,
         ChannelRepositoryInterface $channelRepository,
@@ -93,7 +97,9 @@ final class GenerateBatchHandler implements MessageHandlerInterface
         ViolationFactoryInterface $violationFactory,
         SerializerInterface $serializer,
         UrlGeneratorInterface $urlGenerator,
-        LoggerInterface $logger
+        LoggerInterface $logger,
+        array $brandsByFeedCode,
+        array $taxonsByFeedCode
     ) {
         $this->feedRepository = $feedRepository;
         $this->channelRepository = $channelRepository;
@@ -110,6 +116,61 @@ final class GenerateBatchHandler implements MessageHandlerInterface
         $this->serializer = $serializer;
         $this->urlGenerator = $urlGenerator;
         $this->logger = $logger;
+        $this->brandsByFeedCode = $brandsByFeedCode;
+        $this->taxonsByFeedCode = $taxonsByFeedCode;
+    }
+
+    private function getBrandsAllowedByFeedCode($feedCode): array
+    {
+        if (isset($this->brandsByFeedCode[$feedCode])) {
+            return $this->brandsByFeedCode[$feedCode];
+        }
+
+        return [];
+    }
+
+    private function getTaxonsAllowedByFeedCode($feedCode): array
+    {
+        if (isset($this->taxonsByFeedCode[$feedCode])) {
+            return $this->taxonsByFeedCode[$feedCode];
+        }
+
+        return [];
+    }
+
+    private function removeItemsByBrands($items, $brands)
+    {
+        if (count($brands) === 0) {
+            return $items;
+        }
+
+        $itemsFiltered = [];
+        foreach ($items as $item) {
+            if (in_array($item->getBrand()->getCode(), $brands)) {
+                $itemsFiltered[] = $item;
+            }
+        }
+
+        return $itemsFiltered;
+    }
+
+    private function removeItemsByTaxons($items, $taxons)
+    {
+        if (count($taxons) === 0) {
+            return $items;
+        }
+
+        $itemsFiltered = [];
+        foreach ($items as $item) {
+            foreach ($item->getProductTaxons() as $productTaxon) {
+                if (in_array($productTaxon->getTaxon()->getCode(), $taxons)) {
+                    $itemsFiltered[] = $item;
+                    break;
+                }
+            }
+        }
+
+        return $itemsFiltered;
     }
 
     public function __invoke(GenerateBatch $message): void
@@ -132,6 +193,18 @@ final class GenerateBatchHandler implements MessageHandlerInterface
 
             $items = $feedType->getDataProvider()->getItems($message->getBatch());
 
+            // remove items by the values set in getBrandsAllowedByFeedCode()
+            $items = $this->removeItemsByBrands(
+                $items,
+                $this->getBrandsAllowedByFeedCode($feedType->getCode())
+            );
+
+            // remove items by the values set in getTaxonsAllowedByFeedCode()
+            $items = $this->removeItemsByTaxons(
+                $items,
+                $this->getTaxonsAllowedByFeedCode($feedType->getCode())
+            );
+
             $itemContext = $feedType->getItemContext();
 
             $template = $this->twig->load($feedType->getTemplate());
diff --git a/src/Resources/config/services/message_handler.xml b/src/Resources/config/services/message_handler.xml
index 5e3fcda..1c104c0 100644
--- a/src/Resources/config/services/message_handler.xml
+++ b/src/Resources/config/services/message_handler.xml
@@ -32,6 +32,8 @@
             <argument type="service" id="serializer"/>
             <argument type="service" id="router"/>
             <argument type="service" id="logger"/>
+            <argument key="$brandsByFeedCode">%env(json:FEED_CODE_BRANDS)%</argument>
+            <argument key="$taxonsByFeedCode">%env(json:FEED_CODE_TAXONS)%</argument>
 
             <tag name="messenger.message_handler"/>
         </service>
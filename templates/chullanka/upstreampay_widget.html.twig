<!-- Numéros de cartes de test -->
<!-- https://developer.dalenys.com/payment-methods/bank-card.html -->

<div id="widget-payment-selection"></div>
<div id="widget-payment-form"></div>

<hr>

<div id="widget-payment"></div>
{#<button id="pay-button" class="ui huge primary fluid icon labeled button">
    <i class="check icon"></i> {{ 'sylius.ui.place_order'|trans }}
</button>#}
{#<div id="pay-button"></div>#}
<script src="{{ widget_url }}"></script>
<script>
    const manager = new UpStreamPay.WidgetManager();
    const configMerchant =  {
        "payment_base_url": "{{ payment_base_url }}",
        "entity_id": "{{ entity_id }}",
        "key": "{{ api_key }}"
    }
    manager.setMerchantConfig(configMerchant);

    {#//const session = await getSessionFromBackend({{ chk_upstreampay|raw }});#}
    const session = {{ chk_upstreampay|raw }};
    manager.setSession(session);

    /*const widgetSelection = manager.createWidget({
        ui:{
            layout:{
                name: "LIST", // GRID, LIST
            }
        },
        interface: "SELECTION"
    });
    widgetSelection.mount("widget-payment-selection"); //can be called whenever you want

    const widgetForm = manager.createWidget({
        ui:{
            layout:{
                display: "WALLET", // BASIC, WALLET, BARE
            }
        },
        interface: "FORM",
    });
    widgetForm.mount("widget-payment-form"); //can be called whenever you want*/


    const widget = manager.createWidget({
        ui:{
            layout:{
                name: "ACCORDION", // LIST, GRID, ACCORDION
                display: "WALLET", // BASIC, WALLET, BARE
            }
        },
        interface: "PAYMENT",
    });
    widget.mount("widget-payment"); //can be called whenever you want

    /*const buttonWidget = manager.createWidget({
        ui:{
            translations:{
                overrides:{
                    "WIDGET_PAY_BUTTON_TEXT":"Commander"
                }
            }
        },
        interface: "PAY_BUTTON",
    });
    buttonWidget.mount("pay-button");*/

    document.addEventListener('DOMContentLoaded', () => {
        manager.registerPayabilityListener((payable) => {
            if (payable) {
                document.getElementById('next-step').removeAttribute('disabled')
            } else {
                document.getElementById('next-step').setAttribute('disabled', true);
            }
        })
        
        document.querySelector('#next-step').addEventListener('click', function(e) {
            e.preventDefault();

            var _agreement = document.querySelector('#agreement-checkbox');
            if(_agreement.checked == false)
            {
                alert('Veuillez accepter les conditions générales de ventes avant de valider la commande.');
            }
            else manager.submit();
        });
    });
</script>